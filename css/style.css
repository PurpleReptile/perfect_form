:root {
    /*--main-color: #5264AE;*/
    --main-color: #007bff;
}

/* general form styles ======================================= */
.pf.group {
    position: relative;
    margin-bottom: 45px;
}

.pf.group input {
    font-size: 18px;
    padding: 10px 10px 10px 5px;
    display: block;
    width: 300px;
    border: none;
    border-bottom: 1px solid #757575;
}

.pf.group input:focus {
    outline: none;
}

/* LABEL ======================================= */
.pf.group label {
    color: #999;
    font-size: 18px;
    font-weight: normal;
    position: absolute;
    pointer-events: none;
    left: 5px;
    top: 10px;
    transition: 0.2s ease all;
    -moz-transition: 0.2s ease all;
    -webkit-transition: 0.2s ease all;
}

.pf.group label .req {
    color: red;
}

/* active state */
.pf.group input:focus ~ label,
.pf.group input.valid ~ label {
/*.pf.group input:valid ~ label {*/
    top: -20px;
    font-size: 14px;
    color: var(--main-color);
}

/* BOTTOM BARS ================================= */
.pf.group .bar {
    position: relative;
    display: block;
    width: 300px;
}

.pf.group .bar:before,
.pf.group .bar:after {
    content: '';
    height: 2px;
    width: 0;
    bottom: 1px;
    position: absolute;
    background: var(--main-color);
    transition: 0.2s ease all;
    -moz-transition: 0.2s ease all;
    -webkit-transition: 0.2s ease all;
}

.pf.group .bar:before {
    left: 50%;
}

.pf .bar:after {
    right: 50%;
}

/* active state */
.pf.group input:focus ~ .bar:before,
.pf.group input:focus ~ .bar:after {
    width: 50%;
}

/* HIGHLIGHTER ================================== */
.pf.group .highlight {
    position: absolute;
    height: 60%;
    width: 100px;
    top: 25%;
    left: 0;
    pointer-events: none;
    opacity: 0.5;
}

/* active state */
.pf.group input:focus ~.highlight {
    -webkit-animation: inputHighlighter 0.3s ease;
    -moz-animation: inputHighlighter 0.3s ease;
    animation: inputHighlighter 0.3s ease;
}

/* error */
.pf.group.error .bar:before,
.pf.group.error .bar:after {
    background: red;
}

.pf.group.error input ~ .bar:before,
.pf.group.error input ~ .bar:after {
    width: 50%;
}

.pf.group.error input:focus ~.highlight {
    -webkit-animation: none;
    -o-animation: none;
    animation: none;
}

.pf.group.error input:focus ~ label,
.pf.group.error input:valid ~ label {
    color: red;
}

.pf.group.error span.example {
    font-style: italic;
}

/* ANIMATIONS ================ */
@-webkit-keyframes inputHighlighter {
    from {
        background: var(--main-color);
    }
    to {
        width: 0;
        background: transparent;
    }
}

@-moz-keyframes inputHighlighter {
    from {
        background: var(--main-color);
    }
    to {
        width: 0;
        background: transparent;
    }
}

@keyframes inputHighlighter {
    from {
        background: var(--main-color);
    }
    to {
        width: 0;
        background: transparent;
    }
}

/* The container */
.pf.checkbox {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 45px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    line-height: 1;
}

/* Hide the browser's default checkbox */
.pf.checkbox input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom checkbox */
.pf .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: #eee;
}

/* On mouse-over, add a grey background color */
.pf.checkbox:hover input ~ .checkmark {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.pf.checkbox input:checked ~ .checkmark {
    background-color: var(--main-color);
}

/* Create the checkmark/indicator (hidden when not checked) */
.pf.checkbox .checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.pf.checkbox input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.pf.checkbox .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

/* custom modal window */
.pf-modal {
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: auto;
    background-color: rgb(0,0,0);
    background-color: rgba(0,0,0,0.4);
}

.pf-modal .pf-container {
    background-color: white;
    padding: 36px 36px 16px;
    position: relative;
    border-radius: 4px;
}

.pf-modal .pf-container .btn-close {
    position: absolute;
    top: -4px;
    right: 12px;
    color: #aaaaaa;
    font-size: 28px;
    font-weight: bold;
}

.pf-modal .pf-container .btn-close:hover,
.pf-modal .pf-container .btn-close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}